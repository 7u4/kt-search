// Generated by EsKotlinCodeGenPlugin.
//
// Do not modify. This code is regenerated regularly. 
package org.elasticsearch.client

import com.jillesvangurp.eskotlinwrapper.SuspendingActionListener.Companion.suspending
import org.elasticsearch.action.admin.indices.`open`.OpenIndexRequest
import org.elasticsearch.action.admin.indices.`open`.OpenIndexResponse
import org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest
import org.elasticsearch.action.admin.indices.alias.`get`.GetAliasesRequest
import org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheRequest
import org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheResponse
import org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest
import org.elasticsearch.action.admin.indices.flush.FlushRequest
import org.elasticsearch.action.admin.indices.flush.FlushResponse
import org.elasticsearch.action.admin.indices.forcemerge.ForceMergeRequest
import org.elasticsearch.action.admin.indices.forcemerge.ForceMergeResponse
import org.elasticsearch.action.admin.indices.refresh.RefreshRequest
import org.elasticsearch.action.admin.indices.refresh.RefreshResponse
import org.elasticsearch.action.admin.indices.settings.`get`.GetSettingsRequest
import org.elasticsearch.action.admin.indices.settings.`get`.GetSettingsResponse
import org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsRequest
import org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateRequest
import org.elasticsearch.action.admin.indices.validate.query.ValidateQueryRequest
import org.elasticsearch.action.admin.indices.validate.query.ValidateQueryResponse
import org.elasticsearch.action.support.master.AcknowledgedResponse
import org.elasticsearch.client.core.ShardsAcknowledgedResponse
import org.elasticsearch.client.indices.AnalyzeRequest
import org.elasticsearch.client.indices.AnalyzeResponse
import org.elasticsearch.client.indices.CloseIndexRequest
import org.elasticsearch.client.indices.CloseIndexResponse
import org.elasticsearch.client.indices.CreateDataStreamRequest
import org.elasticsearch.client.indices.CreateIndexRequest
import org.elasticsearch.client.indices.CreateIndexResponse
import org.elasticsearch.client.indices.DataStreamsStatsRequest
import org.elasticsearch.client.indices.DataStreamsStatsResponse
import org.elasticsearch.client.indices.DeleteAliasRequest
import org.elasticsearch.client.indices.DeleteComposableIndexTemplateRequest
import org.elasticsearch.client.indices.DeleteDataStreamRequest
import org.elasticsearch.client.indices.FreezeIndexRequest
import org.elasticsearch.client.indices.GetComposableIndexTemplateRequest
import org.elasticsearch.client.indices.GetComposableIndexTemplatesResponse
import org.elasticsearch.client.indices.GetDataStreamRequest
import org.elasticsearch.client.indices.GetDataStreamResponse
import org.elasticsearch.client.indices.GetFieldMappingsRequest
import org.elasticsearch.client.indices.GetFieldMappingsResponse
import org.elasticsearch.client.indices.GetIndexRequest
import org.elasticsearch.client.indices.GetIndexResponse
import org.elasticsearch.client.indices.GetIndexTemplatesRequest
import org.elasticsearch.client.indices.GetIndexTemplatesResponse
import org.elasticsearch.client.indices.GetMappingsRequest
import org.elasticsearch.client.indices.GetMappingsResponse
import org.elasticsearch.client.indices.PutComposableIndexTemplateRequest
import org.elasticsearch.client.indices.PutIndexTemplateRequest
import org.elasticsearch.client.indices.PutMappingRequest
import org.elasticsearch.client.indices.ReloadAnalyzersRequest
import org.elasticsearch.client.indices.ReloadAnalyzersResponse
import org.elasticsearch.client.indices.ResizeRequest
import org.elasticsearch.client.indices.ResizeResponse
import org.elasticsearch.client.indices.SimulateIndexTemplateRequest
import org.elasticsearch.client.indices.SimulateIndexTemplateResponse
import org.elasticsearch.client.indices.UnfreezeIndexRequest
import org.elasticsearch.client.indices.rollover.RolloverRequest
import org.elasticsearch.client.indices.rollover.RolloverResponse

public suspend fun IndicesClient.createAsync(request: CreateIndexRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): CreateIndexResponse {
  // generated code block
  return suspending {
      this.createAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.cloneAsync(request: ResizeRequest, requestOptions: RequestOptions =
    RequestOptions.DEFAULT): ResizeResponse {
  // generated code block
  return suspending {
      this.cloneAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.createDataStreamAsync(request: CreateDataStreamRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.createDataStreamAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.deleteDataStreamAsync(request: DeleteDataStreamRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteDataStreamAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.putSettingsAsync(request: UpdateSettingsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.putSettingsAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.getSettingsAsync(request: GetSettingsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetSettingsResponse {
  // generated code block
  return suspending {
      this.getSettingsAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.getDataStreamAsync(request: GetDataStreamRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetDataStreamResponse {
  // generated code block
  return suspending {
      this.getDataStreamAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.dataStreamsStatsAsync(request: DataStreamsStatsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): DataStreamsStatsResponse {
  // generated code block
  return suspending {
      this.dataStreamsStatsAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.putMappingAsync(request: PutMappingRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.putMappingAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.getMappingAsync(request: GetMappingsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetMappingsResponse {
  // generated code block
  return suspending {
      this.getMappingAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.getFieldMappingAsync(request: GetFieldMappingsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetFieldMappingsResponse {
  // generated code block
  return suspending {
      this.getFieldMappingAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.updateAliasesAsync(request: IndicesAliasesRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.updateAliasesAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.openAsync(request: OpenIndexRequest, requestOptions: RequestOptions
    = RequestOptions.DEFAULT): OpenIndexResponse {
  // generated code block
  return suspending {
      this.openAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.closeAsync(request: CloseIndexRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): CloseIndexResponse {
  // generated code block
  return suspending {
      this.closeAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.refreshAsync(request: RefreshRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): RefreshResponse {
  // generated code block
  return suspending {
      this.refreshAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.flushAsync(request: FlushRequest, requestOptions: RequestOptions =
    RequestOptions.DEFAULT): FlushResponse {
  // generated code block
  return suspending {
      this.flushAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.forcemergeAsync(request: ForceMergeRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): ForceMergeResponse {
  // generated code block
  return suspending {
      this.forcemergeAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.clearCacheAsync(request: ClearIndicesCacheRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): ClearIndicesCacheResponse {
  // generated code block
  return suspending {
      this.clearCacheAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.shrinkAsync(request: ResizeRequest, requestOptions: RequestOptions
    = RequestOptions.DEFAULT): ResizeResponse {
  // generated code block
  return suspending {
      this.shrinkAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.splitAsync(request: ResizeRequest, requestOptions: RequestOptions =
    RequestOptions.DEFAULT): ResizeResponse {
  // generated code block
  return suspending {
      this.splitAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.rolloverAsync(request: RolloverRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): RolloverResponse {
  // generated code block
  return suspending {
      this.rolloverAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.getAliasAsync(request: GetAliasesRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetAliasesResponse {
  // generated code block
  return suspending {
      this.getAliasAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.putTemplateAsync(request: PutIndexTemplateRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.putTemplateAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.putIndexTemplateAsync(request: PutComposableIndexTemplateRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.putIndexTemplateAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.simulateIndexTemplateAsync(request: SimulateIndexTemplateRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): SimulateIndexTemplateResponse {
  // generated code block
  return suspending {
      this.simulateIndexTemplateAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.validateQueryAsync(request: ValidateQueryRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): ValidateQueryResponse {
  // generated code block
  return suspending {
      this.validateQueryAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.getIndexTemplateAsync(request: GetIndexTemplatesRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetIndexTemplatesResponse {
  // generated code block
  return suspending {
      this.getIndexTemplateAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.getIndexTemplateAsync(request: GetComposableIndexTemplateRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetComposableIndexTemplatesResponse {
  // generated code block
  return suspending {
      this.getIndexTemplateAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.analyzeAsync(request: AnalyzeRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AnalyzeResponse {
  // generated code block
  return suspending {
      this.analyzeAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.freezeAsync(request: FreezeIndexRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): ShardsAcknowledgedResponse {
  // generated code block
  return suspending {
      this.freezeAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.unfreezeAsync(request: UnfreezeIndexRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): ShardsAcknowledgedResponse {
  // generated code block
  return suspending {
      this.unfreezeAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.deleteTemplateAsync(request: DeleteIndexTemplateRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteTemplateAsync(request,requestOptions,it)
  }
}

public suspend
    fun IndicesClient.deleteIndexTemplateAsync(request: DeleteComposableIndexTemplateRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteIndexTemplateAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.reloadAnalyzersAsync(request: ReloadAnalyzersRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): ReloadAnalyzersResponse {
  // generated code block
  return suspending {
      this.reloadAnalyzersAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.deleteAliasAsync(request: DeleteAliasRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT):
    org.elasticsearch.client.core.AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteAliasAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.getAsync(request: GetIndexRequest, requestOptions: RequestOptions =
    RequestOptions.DEFAULT): GetIndexResponse {
  // generated code block
  return suspending {
      this.getAsync(request,requestOptions,it)
  }
}

public suspend fun IndicesClient.deleteAsync(request: DeleteIndexRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteAsync(request,requestOptions,it)
  }
}
