// Generated by EsKotlinCodeGenPlugin.
//
// Do not modify. This code is regenerated regularly. 
package org.elasticsearch.client

import com.jillesvangurp.eskotlinwrapper.SuspendingActionListener.Companion.suspending
import org.elasticsearch.action.support.master.AcknowledgedResponse
import org.elasticsearch.client.ml.CloseJobRequest
import org.elasticsearch.client.ml.CloseJobResponse
import org.elasticsearch.client.ml.DeleteCalendarEventRequest
import org.elasticsearch.client.ml.DeleteCalendarJobRequest
import org.elasticsearch.client.ml.DeleteCalendarRequest
import org.elasticsearch.client.ml.DeleteDataFrameAnalyticsRequest
import org.elasticsearch.client.ml.DeleteDatafeedRequest
import org.elasticsearch.client.ml.DeleteExpiredDataRequest
import org.elasticsearch.client.ml.DeleteExpiredDataResponse
import org.elasticsearch.client.ml.DeleteFilterRequest
import org.elasticsearch.client.ml.DeleteForecastRequest
import org.elasticsearch.client.ml.DeleteJobRequest
import org.elasticsearch.client.ml.DeleteJobResponse
import org.elasticsearch.client.ml.DeleteModelSnapshotRequest
import org.elasticsearch.client.ml.DeleteTrainedModelAliasRequest
import org.elasticsearch.client.ml.DeleteTrainedModelRequest
import org.elasticsearch.client.ml.EstimateModelMemoryRequest
import org.elasticsearch.client.ml.EstimateModelMemoryResponse
import org.elasticsearch.client.ml.EvaluateDataFrameRequest
import org.elasticsearch.client.ml.EvaluateDataFrameResponse
import org.elasticsearch.client.ml.ExplainDataFrameAnalyticsRequest
import org.elasticsearch.client.ml.ExplainDataFrameAnalyticsResponse
import org.elasticsearch.client.ml.FlushJobRequest
import org.elasticsearch.client.ml.FlushJobResponse
import org.elasticsearch.client.ml.ForecastJobRequest
import org.elasticsearch.client.ml.ForecastJobResponse
import org.elasticsearch.client.ml.GetBucketsRequest
import org.elasticsearch.client.ml.GetBucketsResponse
import org.elasticsearch.client.ml.GetCalendarEventsRequest
import org.elasticsearch.client.ml.GetCalendarEventsResponse
import org.elasticsearch.client.ml.GetCalendarsRequest
import org.elasticsearch.client.ml.GetCalendarsResponse
import org.elasticsearch.client.ml.GetCategoriesRequest
import org.elasticsearch.client.ml.GetCategoriesResponse
import org.elasticsearch.client.ml.GetDataFrameAnalyticsRequest
import org.elasticsearch.client.ml.GetDataFrameAnalyticsResponse
import org.elasticsearch.client.ml.GetDataFrameAnalyticsStatsRequest
import org.elasticsearch.client.ml.GetDataFrameAnalyticsStatsResponse
import org.elasticsearch.client.ml.GetDatafeedRequest
import org.elasticsearch.client.ml.GetDatafeedResponse
import org.elasticsearch.client.ml.GetDatafeedStatsRequest
import org.elasticsearch.client.ml.GetDatafeedStatsResponse
import org.elasticsearch.client.ml.GetFiltersRequest
import org.elasticsearch.client.ml.GetFiltersResponse
import org.elasticsearch.client.ml.GetInfluencersRequest
import org.elasticsearch.client.ml.GetInfluencersResponse
import org.elasticsearch.client.ml.GetJobRequest
import org.elasticsearch.client.ml.GetJobResponse
import org.elasticsearch.client.ml.GetJobStatsRequest
import org.elasticsearch.client.ml.GetJobStatsResponse
import org.elasticsearch.client.ml.GetModelSnapshotsRequest
import org.elasticsearch.client.ml.GetModelSnapshotsResponse
import org.elasticsearch.client.ml.GetOverallBucketsRequest
import org.elasticsearch.client.ml.GetOverallBucketsResponse
import org.elasticsearch.client.ml.GetRecordsRequest
import org.elasticsearch.client.ml.GetRecordsResponse
import org.elasticsearch.client.ml.GetTrainedModelsRequest
import org.elasticsearch.client.ml.GetTrainedModelsResponse
import org.elasticsearch.client.ml.GetTrainedModelsStatsRequest
import org.elasticsearch.client.ml.GetTrainedModelsStatsResponse
import org.elasticsearch.client.ml.MlInfoRequest
import org.elasticsearch.client.ml.MlInfoResponse
import org.elasticsearch.client.ml.OpenJobRequest
import org.elasticsearch.client.ml.OpenJobResponse
import org.elasticsearch.client.ml.PostCalendarEventRequest
import org.elasticsearch.client.ml.PostCalendarEventResponse
import org.elasticsearch.client.ml.PostDataRequest
import org.elasticsearch.client.ml.PostDataResponse
import org.elasticsearch.client.ml.PreviewDatafeedRequest
import org.elasticsearch.client.ml.PreviewDatafeedResponse
import org.elasticsearch.client.ml.PutCalendarJobRequest
import org.elasticsearch.client.ml.PutCalendarRequest
import org.elasticsearch.client.ml.PutCalendarResponse
import org.elasticsearch.client.ml.PutDataFrameAnalyticsRequest
import org.elasticsearch.client.ml.PutDataFrameAnalyticsResponse
import org.elasticsearch.client.ml.PutDatafeedRequest
import org.elasticsearch.client.ml.PutDatafeedResponse
import org.elasticsearch.client.ml.PutFilterRequest
import org.elasticsearch.client.ml.PutFilterResponse
import org.elasticsearch.client.ml.PutJobRequest
import org.elasticsearch.client.ml.PutJobResponse
import org.elasticsearch.client.ml.PutTrainedModelAliasRequest
import org.elasticsearch.client.ml.PutTrainedModelRequest
import org.elasticsearch.client.ml.PutTrainedModelResponse
import org.elasticsearch.client.ml.ResetJobRequest
import org.elasticsearch.client.ml.ResetJobResponse
import org.elasticsearch.client.ml.RevertModelSnapshotRequest
import org.elasticsearch.client.ml.RevertModelSnapshotResponse
import org.elasticsearch.client.ml.SetUpgradeModeRequest
import org.elasticsearch.client.ml.StartDataFrameAnalyticsRequest
import org.elasticsearch.client.ml.StartDataFrameAnalyticsResponse
import org.elasticsearch.client.ml.StartDatafeedRequest
import org.elasticsearch.client.ml.StartDatafeedResponse
import org.elasticsearch.client.ml.StopDataFrameAnalyticsRequest
import org.elasticsearch.client.ml.StopDataFrameAnalyticsResponse
import org.elasticsearch.client.ml.StopDatafeedRequest
import org.elasticsearch.client.ml.StopDatafeedResponse
import org.elasticsearch.client.ml.UpdateDataFrameAnalyticsRequest
import org.elasticsearch.client.ml.UpdateDatafeedRequest
import org.elasticsearch.client.ml.UpdateFilterRequest
import org.elasticsearch.client.ml.UpdateJobRequest
import org.elasticsearch.client.ml.UpdateModelSnapshotRequest
import org.elasticsearch.client.ml.UpdateModelSnapshotResponse
import org.elasticsearch.client.ml.UpgradeJobModelSnapshotRequest
import org.elasticsearch.client.ml.UpgradeJobModelSnapshotResponse

public suspend
    fun MachineLearningClient.deleteCalendarEventAsync(request: DeleteCalendarEventRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteCalendarEventAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.putFilterAsync(request: PutFilterRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutFilterResponse {
  // generated code block
  return suspending {
      this.putFilterAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getFilterAsync(request: GetFiltersRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetFiltersResponse {
  // generated code block
  return suspending {
      this.getFilterAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.updateFilterAsync(request: UpdateFilterRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutFilterResponse {
  // generated code block
  return suspending {
      this.updateFilterAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.deleteFilterAsync(request: DeleteFilterRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteFilterAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getMlInfoAsync(request: MlInfoRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): MlInfoResponse {
  // generated code block
  return suspending {
      this.getMlInfoAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.setUpgradeModeAsync(request: SetUpgradeModeRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.setUpgradeModeAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.estimateModelMemoryAsync(request: EstimateModelMemoryRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): EstimateModelMemoryResponse {
  // generated code block
  return suspending {
      this.estimateModelMemoryAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.putDataFrameAnalyticsAsync(request: PutDataFrameAnalyticsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutDataFrameAnalyticsResponse {
  // generated code block
  return suspending {
      this.putDataFrameAnalyticsAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.updateDataFrameAnalyticsAsync(request: UpdateDataFrameAnalyticsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutDataFrameAnalyticsResponse {
  // generated code block
  return suspending {
      this.updateDataFrameAnalyticsAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.getDataFrameAnalyticsAsync(request: GetDataFrameAnalyticsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetDataFrameAnalyticsResponse {
  // generated code block
  return suspending {
      this.getDataFrameAnalyticsAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.getDataFrameAnalyticsStatsAsync(request: GetDataFrameAnalyticsStatsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetDataFrameAnalyticsStatsResponse {
  // generated code block
  return suspending {
      this.getDataFrameAnalyticsStatsAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.startDataFrameAnalyticsAsync(request: StartDataFrameAnalyticsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): StartDataFrameAnalyticsResponse {
  // generated code block
  return suspending {
      this.startDataFrameAnalyticsAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.stopDataFrameAnalyticsAsync(request: StopDataFrameAnalyticsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): StopDataFrameAnalyticsResponse {
  // generated code block
  return suspending {
      this.stopDataFrameAnalyticsAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.deleteDataFrameAnalyticsAsync(request: DeleteDataFrameAnalyticsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteDataFrameAnalyticsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.evaluateDataFrameAsync(request: EvaluateDataFrameRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): EvaluateDataFrameResponse {
  // generated code block
  return suspending {
      this.evaluateDataFrameAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.explainDataFrameAnalyticsAsync(request: ExplainDataFrameAnalyticsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): ExplainDataFrameAnalyticsResponse {
  // generated code block
  return suspending {
      this.explainDataFrameAnalyticsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getTrainedModelsAsync(request: GetTrainedModelsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetTrainedModelsResponse {
  // generated code block
  return suspending {
      this.getTrainedModelsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.putTrainedModelAsync(request: PutTrainedModelRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutTrainedModelResponse {
  // generated code block
  return suspending {
      this.putTrainedModelAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.getTrainedModelsStatsAsync(request: GetTrainedModelsStatsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetTrainedModelsStatsResponse {
  // generated code block
  return suspending {
      this.getTrainedModelsStatsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.deleteTrainedModelAsync(request: DeleteTrainedModelRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteTrainedModelAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.putTrainedModelAliasAsync(request: PutTrainedModelAliasRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.putTrainedModelAliasAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.deleteTrainedModelAliasAsync(request: DeleteTrainedModelAliasRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteTrainedModelAliasAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getJobStatsAsync(request: GetJobStatsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetJobStatsResponse {
  // generated code block
  return suspending {
      this.getJobStatsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.deleteExpiredDataAsync(request: DeleteExpiredDataRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): DeleteExpiredDataResponse {
  // generated code block
  return suspending {
      this.deleteExpiredDataAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.deleteJobAsync(request: DeleteJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): DeleteJobResponse {
  // generated code block
  return suspending {
      this.deleteJobAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.putJobAsync(request: PutJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutJobResponse {
  // generated code block
  return suspending {
      this.putJobAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getJobAsync(request: GetJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetJobResponse {
  // generated code block
  return suspending {
      this.getJobAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.openJobAsync(request: OpenJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): OpenJobResponse {
  // generated code block
  return suspending {
      this.openJobAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.closeJobAsync(request: CloseJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): CloseJobResponse {
  // generated code block
  return suspending {
      this.closeJobAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.flushJobAsync(request: FlushJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): FlushJobResponse {
  // generated code block
  return suspending {
      this.flushJobAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.forecastJobAsync(request: ForecastJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): ForecastJobResponse {
  // generated code block
  return suspending {
      this.forecastJobAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.deleteForecastAsync(request: DeleteForecastRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteForecastAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.deleteModelSnapshotAsync(request: DeleteModelSnapshotRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteModelSnapshotAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.resetJobAsync(request: ResetJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): ResetJobResponse {
  // generated code block
  return suspending {
      this.resetJobAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.revertModelSnapshotAsync(request: RevertModelSnapshotRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): RevertModelSnapshotResponse {
  // generated code block
  return suspending {
      this.revertModelSnapshotAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.putDatafeedAsync(request: PutDatafeedRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutDatafeedResponse {
  // generated code block
  return suspending {
      this.putDatafeedAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.updateDatafeedAsync(request: UpdateDatafeedRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutDatafeedResponse {
  // generated code block
  return suspending {
      this.updateDatafeedAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getDatafeedAsync(request: GetDatafeedRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetDatafeedResponse {
  // generated code block
  return suspending {
      this.getDatafeedAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.deleteDatafeedAsync(request: DeleteDatafeedRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteDatafeedAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.startDatafeedAsync(request: StartDatafeedRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): StartDatafeedResponse {
  // generated code block
  return suspending {
      this.startDatafeedAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.stopDatafeedAsync(request: StopDatafeedRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): StopDatafeedResponse {
  // generated code block
  return suspending {
      this.stopDatafeedAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getDatafeedStatsAsync(request: GetDatafeedStatsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetDatafeedStatsResponse {
  // generated code block
  return suspending {
      this.getDatafeedStatsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.previewDatafeedAsync(request: PreviewDatafeedRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PreviewDatafeedResponse {
  // generated code block
  return suspending {
      this.previewDatafeedAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.updateJobAsync(request: UpdateJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutJobResponse {
  // generated code block
  return suspending {
      this.updateJobAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getBucketsAsync(request: GetBucketsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetBucketsResponse {
  // generated code block
  return suspending {
      this.getBucketsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getCategoriesAsync(request: GetCategoriesRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetCategoriesResponse {
  // generated code block
  return suspending {
      this.getCategoriesAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getModelSnapshotsAsync(request: GetModelSnapshotsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetModelSnapshotsResponse {
  // generated code block
  return suspending {
      this.getModelSnapshotsAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.updateModelSnapshotAsync(request: UpdateModelSnapshotRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): UpdateModelSnapshotResponse {
  // generated code block
  return suspending {
      this.updateModelSnapshotAsync(request,requestOptions,it)
  }
}

public suspend
    fun MachineLearningClient.upgradeJobSnapshotAsync(request: UpgradeJobModelSnapshotRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): UpgradeJobModelSnapshotResponse {
  // generated code block
  return suspending {
      this.upgradeJobSnapshotAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getOverallBucketsAsync(request: GetOverallBucketsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetOverallBucketsResponse {
  // generated code block
  return suspending {
      this.getOverallBucketsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getRecordsAsync(request: GetRecordsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetRecordsResponse {
  // generated code block
  return suspending {
      this.getRecordsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.postDataAsync(request: PostDataRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PostDataResponse {
  // generated code block
  return suspending {
      this.postDataAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getCalendarsAsync(request: GetCalendarsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetCalendarsResponse {
  // generated code block
  return suspending {
      this.getCalendarsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getInfluencersAsync(request: GetInfluencersRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetInfluencersResponse {
  // generated code block
  return suspending {
      this.getInfluencersAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.putCalendarAsync(request: PutCalendarRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutCalendarResponse {
  // generated code block
  return suspending {
      this.putCalendarAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.putCalendarJobAsync(request: PutCalendarJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutCalendarResponse {
  // generated code block
  return suspending {
      this.putCalendarJobAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.deleteCalendarJobAsync(request: DeleteCalendarJobRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PutCalendarResponse {
  // generated code block
  return suspending {
      this.deleteCalendarJobAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.deleteCalendarAsync(request: DeleteCalendarRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteCalendarAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.getCalendarEventsAsync(request: GetCalendarEventsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetCalendarEventsResponse {
  // generated code block
  return suspending {
      this.getCalendarEventsAsync(request,requestOptions,it)
  }
}

public suspend fun MachineLearningClient.postCalendarEventAsync(request: PostCalendarEventRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PostCalendarEventResponse {
  // generated code block
  return suspending {
      this.postCalendarEventAsync(request,requestOptions,it)
  }
}
