// Generated by EsKotlinCodeGenPlugin.
//
// Do not modify. This code is regenerated regularly. 
package org.elasticsearch.client

import com.jillesvangurp.eskotlinwrapper.SuspendingActionListener.Companion.suspending
import org.elasticsearch.client.core.AcknowledgedResponse
import org.elasticsearch.client.transform.DeleteTransformRequest
import org.elasticsearch.client.transform.GetTransformRequest
import org.elasticsearch.client.transform.GetTransformResponse
import org.elasticsearch.client.transform.GetTransformStatsRequest
import org.elasticsearch.client.transform.GetTransformStatsResponse
import org.elasticsearch.client.transform.PreviewTransformRequest
import org.elasticsearch.client.transform.PreviewTransformResponse
import org.elasticsearch.client.transform.PutTransformRequest
import org.elasticsearch.client.transform.StartTransformRequest
import org.elasticsearch.client.transform.StartTransformResponse
import org.elasticsearch.client.transform.StopTransformRequest
import org.elasticsearch.client.transform.StopTransformResponse
import org.elasticsearch.client.transform.UpdateTransformRequest
import org.elasticsearch.client.transform.UpdateTransformResponse

public suspend fun TransformClient.putTransformAsync(request: PutTransformRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.putTransformAsync(request,requestOptions,it)
  }
}

public suspend fun TransformClient.updateTransformAsync(request: UpdateTransformRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): UpdateTransformResponse {
  // generated code block
  return suspending {
      this.updateTransformAsync(request,requestOptions,it)
  }
}

public suspend fun TransformClient.getTransformStatsAsync(request: GetTransformStatsRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetTransformStatsResponse {
  // generated code block
  return suspending {
      this.getTransformStatsAsync(request,requestOptions,it)
  }
}

public suspend fun TransformClient.deleteTransformAsync(request: DeleteTransformRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): AcknowledgedResponse {
  // generated code block
  return suspending {
      this.deleteTransformAsync(request,requestOptions,it)
  }
}

public suspend fun TransformClient.previewTransformAsync(request: PreviewTransformRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): PreviewTransformResponse {
  // generated code block
  return suspending {
      this.previewTransformAsync(request,requestOptions,it)
  }
}

public suspend fun TransformClient.startTransformAsync(request: StartTransformRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): StartTransformResponse {
  // generated code block
  return suspending {
      this.startTransformAsync(request,requestOptions,it)
  }
}

public suspend fun TransformClient.stopTransformAsync(request: StopTransformRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): StopTransformResponse {
  // generated code block
  return suspending {
      this.stopTransformAsync(request,requestOptions,it)
  }
}

public suspend fun TransformClient.getTransformAsync(request: GetTransformRequest,
    requestOptions: RequestOptions = RequestOptions.DEFAULT): GetTransformResponse {
  // generated code block
  return suspending {
      this.getTransformAsync(request,requestOptions,it)
  }
}
